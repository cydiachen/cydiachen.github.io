{"pages":[{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/03/26/4a17b156.html"},{"title":"Introduction","text":"从今天开始，本博客正式进行迁移，从原先的卡顿的博客目录迁移到最新的hexo框架下。","link":"/2020/03/26/ed318fdc.html"},{"title":"ant-man","text":"视频工具包——Ant Man: A tool for video processing on Python1. 需求2.开发进度表123456789gantttitle Ant Man: A tool for video processing on PythondateFormat 2020-04-03section 视频基本IO模块任务1 视频读取模块 :a1,2020-04-05, 5d任务2 视频输出模块 :a2, after a1 , 3d任务3 视频保存模块 :a3, after a2 , 3d任务4 视频缩放模块（插值实现） :a4,after a3 , 3d任务5 视频抽帧模块 :a5,after a4 , 3d 3. 功能测试表4. requirements mutliprocess; gc Opencv-python os","link":"/2020/04/03/4aba8923.html"},{"title":"opencv_video_ROI","text":"Python OpenCV 视频流处理之ROI的获取1、简介最近有接到一个案例，是要对视频进行分析检测的。但是由于现在能拿到的视频都是固定角度的，杂讯较多。要实现对视频有效的分析，需要手动先划定ROI，这里就涉及到了如何在Python中使用OpenCV对视频流进行处理，以及对ROI进行获取。 这里在OpenCV工具包中，有两种获取ROI的方法，一种是对图片提取ROI的方法，采用setMouseCallback的方法自己实现ROI的框选；另一种是直接调用函数selectROI进行获取。 这里首先看一下selectROIs的文档： Selects ROIs on the given image. Function creates a window and allows user to select a ROIs using mouse. Controls: use space or enter to finish current selection and start a new one, use esc to terminate multiple ROI selection process. void cv::selectROIs ( const String &amp; windowName, InputArray img, std::vector&lt; Rect &gt; &amp; boundingBoxes, bool showCrosshair = true, bool fromCenter = false ) Parameters windowNamename of the window where selection process will be shown. imgimage to select a ROI. boundingBoxesselected ROIs. showCrosshairif true crosshair of selection rectangle will be shown. fromCenterif true center of selection will match initial mouse position. In opposite case a corner of selection rectangle will correspont to the initial mouse position. The function sets it’s own mouse callback for specified window using cv::setMouseCallback(windowName, …). After finish of work an empty callback will be set for the used window. 这个函数的一个好处是直接给了一个返回值传出来，这也是我们任务需要的； 通过官方文档中的设置我们也可以看出，如果我们直接调用cv::setMouseCallback(windowName, …)自己来实现一个ROI的获取，没有办法把BBox的参数传出来；我这里自己使用了若干种方法，尝试在setMouseCallback方法中改变整个python代码的全局变量，但是发现这个方法仿佛是异步执行的，并不是立刻执行并改变值，也有可能是我没有调用正确。所以目前建议使用cv2.selectROI方法进行ROI区域的选取。","link":"/2020/04/04/546beffb.html"}],"tags":[{"name":"Introduction","slug":"Introduction","link":"/tags/Introduction/"},{"name":"python-tools","slug":"python-tools","link":"/tags/python-tools/"}],"categories":[]}